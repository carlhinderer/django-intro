--------------------------------------------------------------------
CHAPTER 2 - ENHANCING THE BLOG APPLICATION
--------------------------------------------------------------------

- Sharing Posts By Email

    - First, we allow users to share posts by sending them as emails.  We need to:

        1. Create a form for users to enter their name and email, the email recipient, and 
             optional comments

        2. Create a view in the 'views.py' file that handles the posted data and sends the
             email

        3. Add a URL pattern for the new view in the 'urls.py' file

        4. Create a template to display the form



- Creating Forms with Django

    - We'll start by building the form to share posts.  We'll use Django's built-in forms
        framework.

      Django comes with 2 base classes to build forms:

        1. 'Form' = allows you to build standard forms
        2. 'ModelForm' = allows you to build forms tie to model instances

    
    - First, we create the form.  Forms can reside anywhere in a project, but the convention is to
        put them in a 'forms.py' inside each application.

        # blog/forms.py
        from django import forms

        class EmailPostForm(forms.Form):
            name = forms.CharField(max_length=25)
            email = forms.EmailField()
            to = forms.EmailField()
            comments = forms.CharField(required=False, widget=forms.Textarea)



- Handling Forms in Views

    - Now, we'll create a new view that handles the form and sends an email when it's successfully 
        submitted.  

        # blog/views.py
        from .forms import EmailPostForm
 
        def post_share(request, post_id):
            # Retrieve post by id
            post = get_object_or_404(Post, id=post_id, status='published')
        
            if request.method == 'POST':
                # Form was submitted
                form = EmailPostForm(request.POST)
                if form.is_valid():
                    # Form fields passed validation
                    cd = form.cleaned_data
                    # ... send email
            else:
                form = EmailPostForm()
            return render(request, 'blog/post/share.html', {'post': post, 'form': form})



- Sending Emails with Django

    - Sending emails with Django is pretty straightforward.  First, you need to have a local SMTP server
        or define the configuration of an external SMTP server by adding these settings to the 
        'settings.py' file:

        EMAIL_HOST = 'smtp.gmail.com'
        EMAIL_PORT = 587
        EMAIL_HOST_USER = 'your_account@gmail.com'
        EMAIL_HOST_PASSWORD = 'your_pw'
        EMAIL_USE_TLS = True
        EMAIL_USE_SSL


    - To send the email, we update the view:


        # views.py
        from django.core.mail import send_mail
        
        def post_share(request, post_id):
            post = get_object_or_404(Post, id=post_id, status='published')
            sent = False

            if request.method == 'POST':
                form = EmailPostForm(request.POST)
                if form.is_valid():
                    # Form fields passed validation
                    cd = form.cleaned_data
                    post_url = request.build_absolute_uri(post.get_absolute_url())
                    subject = '{} ({}) recommends you reading "{}"'.format(cd['name'], 
                                                                           cd['email'], 
                                                                           post.title)
                    message = 'Read "{}" at {}\n\n{}\'s comments: {}'.format(post.title, 
                                                                             post_url, 
                                                                             cd['name'], 
                                                                             cd['comments'])
                    send_mail(subject, message, 'admin@myblog.com', [cd['to']])
                    sent = True
            else:
                form = EmailPostForm()
            return render(request, 'blog/post/share.html', {'post': post, 'form': form, 'sent': sent})


    - Finally, we add the url for the email method:

        urlpatters = [
          ... ,
          path('<int:post_id>/share/', views.post_share, name='post_share'),
        ]